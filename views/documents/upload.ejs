<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="max-w-3xl mx-auto">
        <h1 class="text-3xl font-bold text-oxford-900 mb-8">Upload Document</h1>
        
        <div class="bg-white shadow rounded-lg p-6">
            <form action="/documents/upload" method="POST" enctype="multipart/form-data" class="space-y-6">
                <div class="border-2 border-dashed border-oxford-300 rounded-lg p-6 text-center" id="dropzone">
                    <div class="space-y-2">
                        <svg class="mx-auto h-12 w-12 text-oxford-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <div class="text-oxford-600">
                            <label for="document" class="relative cursor-pointer bg-white rounded-md font-medium text-oxford-600 hover:text-oxford-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-oxford-500">
                                <span>Upload a file</span>
                                <input id="document" name="document" type="file" class="sr-only" accept=".pdf,.doc,.docx">
                            </label>
                            <p class="pl-1">or drag and drop</p>
                        </div>
                        <p class="text-xs text-oxford-500" id="file-name-display">
                            No file selected. PDF, DOC, or DOCX up to 10MB
                        </p>
                    </div>
                </div>

                <div class="flex justify-end">
                    <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-oxford-600 hover:bg-oxford-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-oxford-500">
                        Upload
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<% if (recentDocuments && recentDocuments.length > 0) { %>
    <div class="max-w-3xl mx-auto mt-8">
        <h2 class="text-xl font-bold text-oxford-900 mb-4">Recent Uploads</h2>
        <ul class="bg-white rounded-lg shadow divide-y divide-oxford-100">
            <% recentDocuments.forEach(function(doc) { %>
                <li class="flex items-center justify-between px-4 py-3">
                    <span class="text-oxford-800"><%= doc.name %></span>
                    <span class="text-xs text-oxford-500"><%= doc.date ? doc.date.toLocaleString() : '' %></span>
                </li>
            <% }) %>
        </ul>
    </div>
<% } %>

<script>
    // Drag and drop functionality
    const dropzone = document.getElementById('dropzone');
    const fileInput = document.getElementById('document');
    const fileNameDisplay = document.getElementById('file-name-display');

    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropzone.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
        dropzone.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropzone.addEventListener(eventName, unhighlight, false);
    });

    function highlight(e) {
        dropzone.classList.add('border-oxford-500', 'bg-oxford-50');
    }

    function unhighlight(e) {
        dropzone.classList.remove('border-oxford-500', 'bg-oxford-50');
    }

    dropzone.addEventListener('drop', handleDrop, false);
    fileInput.addEventListener('change', handleFileSelect, false);

    function handleDrop(e) {
        const dt = e.dataTransfer;
        const files = dt.files;
        fileInput.files = files;
        updateFileNameDisplay(files[0]);
    }

    function handleFileSelect(e) {
        const files = e.target.files;
        updateFileNameDisplay(files[0]);
    }

    function updateFileNameDisplay(file) {
        if (file) {
            fileNameDisplay.textContent = `Selected: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
        } else {
            fileNameDisplay.textContent = 'No file selected. PDF, DOC, or DOCX up to 10MB';
        }
    }
</script> 